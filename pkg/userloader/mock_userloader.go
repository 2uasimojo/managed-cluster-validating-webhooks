// Code generated by MockGen. DO NOT EDIT.
// Source: userloader.go

// Package userloader is a generated GoMock package.
package userloader

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLoader is a mock of Loader interface
type MockLoader struct {
	ctrl     *gomock.Controller
	recorder *MockLoaderMockRecorder
}

// MockLoaderMockRecorder is the mock recorder for MockLoader
type MockLoaderMockRecorder struct {
	mock *MockLoader
}

// NewMockLoader creates a new mock instance
func NewMockLoader(ctrl *gomock.Controller) *MockLoader {
	mock := &MockLoader{ctrl: ctrl}
	mock.recorder = &MockLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLoader) EXPECT() *MockLoaderMockRecorder {
	return m.recorder
}

// GetUsersFromGroups mocks base method
func (m *MockLoader) GetUsersFromGroups(arg0 ...string) (map[string][]string, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetUsersFromGroups", varargs...)
	ret0, _ := ret[0].(map[string][]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsersFromGroups indicates an expected call of GetUsersFromGroups
func (mr *MockLoaderMockRecorder) GetUsersFromGroups(arg0 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsersFromGroups", reflect.TypeOf((*MockLoader)(nil).GetUsersFromGroups), arg0...)
}
